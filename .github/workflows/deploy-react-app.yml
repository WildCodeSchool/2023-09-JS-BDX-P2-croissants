name: CD-front

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
    types: [closed]

  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  deploy:
    if: (github.event.pull_request.merged || github.event_name == 'push')
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node.js environment
        uses: actions/setup-node@v3
        with:
          node-version: "20.9.0"

      - name: Cache dependencies
        id: cache-nextjob
        uses: actions/cache@v3
        with:
          path: ./frontend/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/frontend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install package dependencies
        if: steps.cache-nextjob.outputs.cache-hit != 'true'
        run: |
          cd frontend
          npm install

      - name: Build
        run: |
          cd frontend
          npm run build -- --base=/${{ github.event.repository.name }}/

      - name: Setup Pages
        uses: actions/configure-pages@v3
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          # Upload only build directory
          path: 'frontend/dist/'
      - name: Deploy
        id: deployment
        uses: actions/deploy-pages@v2
